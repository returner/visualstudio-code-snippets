<?xml version="1.0" encoding="utf-8" ?>
<CodeSnippets  xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>Code snippet for HttpGet</Title>
      <Shortcut>pos</Shortcut>
      <Description>Code snippet for Controller HttpGet</Description>
      <Author>returner</Author>
    </Header>
    <Snippet>
      <Declarations>
        <Literal Editable="true">
          <ID>response</ID>
          <ToolTip>ResponseType</ToolTip>
          <Default>IResponseBase</Default>
        </Literal>
        <Literal Editable="true">
          <ID>name</ID>
          <ToolTip>Method name</ToolTip>
          <Default>MethodName</Default>
        </Literal>
        <Literal Editable="true">
          <ID>request</ID>
          <ToolTip>request name</ToolTip>
          <Default>MethodName</Default>
        </Literal>
        <Literal Editable="true">
          <ID>remark</ID>
          <ToolTip>request name</ToolTip>
          <Default>MethodName</Default>
        </Literal>
        <Literal Editable="true">
          <ID>post_route</ID>
          <ToolTip>request name</ToolTip>
          <Default>MethodName</Default>
        </Literal>
      </Declarations>
      <Code Language="csharp"><![CDATA[
      /// <summary>
      /// $remark$
      /// <summary>
      /// <returns></returns>
      [HttpPost("$post_route$")]
      [SwaggerResponse(200, "success", typeof($response$))]
public async Task<IActionResult> $name$Async([FromBody]$request$ request)
{
  try
  {
    await Task.CompletedTask;$end$
    return new $response$().Ok();
  }
  catch(Exception ex)
  {
    return ex.BadRequest(_logger);
  }
  }]]></Code>
  
    </Snippet>
  </CodeSnippet>
</CodeSnippets>